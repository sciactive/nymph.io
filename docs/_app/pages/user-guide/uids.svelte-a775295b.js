import{S as e,i as a,s,a0 as t,a1 as n,a2 as r,l as o,k as i,e as u,t as h,j as c,L as l,a3 as f,d,n as I,c as D,a as v,g as m,m as y,X as E,b as U,a4 as p,F as w,f as g,o as b,G as q,x as T,u as x,v as C}from"../../chunks/vendor-836b274b.js";import{b as k}from"../../chunks/paths-6758d194.js";function S(e){let a,s,S,$,j,P,L,N,O,G,A,R,V,H,Y,z,B,F,X,J,K,M,Q,W,Z,_,ee,ae,se,te,ne,re,oe,ie,ue,he,ce,le,fe,de,Ie,De,ve,me,ye,Ee,Ue,pe,we,ge,be,qe,Te,xe,Ce,ke,Se,$e;return Ie=new t({props:{language:n,code:"let entity = await Post.factory();\n\nentity.id = await nymph.newUID('Blog/Post');\nawait entity.$save();"}}),{c(){a=new r,s=o(),S=i(),$=u("section"),j=u("header"),P=u("h1"),L=h("UIDs"),N=i(),O=u("p"),G=h("UIDs, or unique IDs, provide an easier way for users to identify entities.\n    UIDs are just sequential numbers and can be used for anything you like, not\n    just entities. As opposed to a GUID, which is a unique ID for all entities,\n    a UID is only unique for its own sequence. Therefore, they are more visually\n    appealing to be used as an ID. (Think Sale #615 vs Sale\n    #790219d8fb67a1357707b71d.)"),A=i(),R=u("p"),V=h("Nymph has the following methods for handling UIDs:"),H=i(),Y=u("ul"),z=u("li"),B=u("code"),F=h("deleteUID"),X=h(" - Delete a unique ID from the system."),J=i(),K=u("li"),M=u("code"),Q=h("getUID"),W=h(" - Get the current value of a unique ID."),Z=i(),_=u("li"),ee=u("code"),ae=h("newUID"),se=h(" - Increment or create a unique ID and return the new value."),te=i(),ne=u("li"),re=u("code"),oe=h("renameUID"),ie=h(" - Rename a unique ID."),ue=i(),he=u("li"),ce=u("code"),le=h("setUID"),fe=h(" - Set the value of a unique ID."),de=i(),c(Ie.$$.fragment),De=i(),ve=u("p"),me=h("You probably don't want to allow UIDs from the client. Then a malicious user\n    can reset the UID. Instead, from the server side, you can create a UID when\n    the entity is saved."),ye=i(),Ee=u("p"),Ue=h("Caution: If a UID is incremented, and the entity you're using it on can't be\n    saved, there is no safe way to decrement the UID back to its previous value.\n    Therefore, you're advised to not use UIDs within transactions."),pe=i(),we=u("section"),ge=u("div"),be=u("div"),qe=u("a"),Te=h("Previous: Ext. the Entity Class"),xe=i(),Ce=u("div"),ke=u("a"),Se=h("Next: Transactions"),this.h()},l(e){const t=l('[data-svelte="svelte-rfrfxx"]',document.head);a=f(t),s=o(),t.forEach(d),S=I(e),$=D(e,"SECTION",{});var n=v($);j=D(n,"HEADER",{class:!0});var r=v(j);P=D(r,"H1",{style:!0});var i=v(P);L=m(i,"UIDs"),i.forEach(d),r.forEach(d),N=I(n),O=D(n,"P",{});var u=v(O);G=m(u,"UIDs, or unique IDs, provide an easier way for users to identify entities.\n    UIDs are just sequential numbers and can be used for anything you like, not\n    just entities. As opposed to a GUID, which is a unique ID for all entities,\n    a UID is only unique for its own sequence. Therefore, they are more visually\n    appealing to be used as an ID. (Think Sale #615 vs Sale\n    #790219d8fb67a1357707b71d.)"),u.forEach(d),A=I(n),R=D(n,"P",{});var h=v(R);V=m(h,"Nymph has the following methods for handling UIDs:"),h.forEach(d),H=I(n),Y=D(n,"UL",{});var c=v(Y);z=D(c,"LI",{});var E=v(z);B=D(E,"CODE",{});var U=v(B);F=m(U,"deleteUID"),U.forEach(d),X=m(E," - Delete a unique ID from the system."),E.forEach(d),J=I(c),K=D(c,"LI",{});var p=v(K);M=D(p,"CODE",{});var w=v(M);Q=m(w,"getUID"),w.forEach(d),W=m(p," - Get the current value of a unique ID."),p.forEach(d),Z=I(c),_=D(c,"LI",{});var g=v(_);ee=D(g,"CODE",{});var b=v(ee);ae=m(b,"newUID"),b.forEach(d),se=m(g," - Increment or create a unique ID and return the new value."),g.forEach(d),te=I(c),ne=D(c,"LI",{});var q=v(ne);re=D(q,"CODE",{});var T=v(re);oe=m(T,"renameUID"),T.forEach(d),ie=m(q," - Rename a unique ID."),q.forEach(d),ue=I(c),he=D(c,"LI",{});var x=v(he);ce=D(x,"CODE",{});var C=v(ce);le=m(C,"setUID"),C.forEach(d),fe=m(x," - Set the value of a unique ID."),x.forEach(d),c.forEach(d),de=I(n),y(Ie.$$.fragment,n),De=I(n),ve=D(n,"P",{});var k=v(ve);me=m(k,"You probably don't want to allow UIDs from the client. Then a malicious user\n    can reset the UID. Instead, from the server side, you can create a UID when\n    the entity is saved."),k.forEach(d),ye=I(n),Ee=D(n,"P",{});var $e=v(Ee);Ue=m($e,"Caution: If a UID is incremented, and the entity you're using it on can't be\n    saved, there is no safe way to decrement the UID back to its previous value.\n    Therefore, you're advised to not use UIDs within transactions."),$e.forEach(d),n.forEach(d),pe=I(e),we=D(e,"SECTION",{});var je=v(we);ge=D(je,"DIV",{class:!0});var Pe=v(ge);be=D(Pe,"DIV",{class:!0});var Le=v(be);qe=D(Le,"A",{href:!0,class:!0,style:!0});var Ne=v(qe);Te=m(Ne,"Previous: Ext. the Entity Class"),Ne.forEach(d),Le.forEach(d),xe=I(Pe),Ce=D(Pe,"DIV",{class:!0,style:!0});var Oe=v(Ce);ke=D(Oe,"A",{href:!0,class:!0,style:!0});var Ge=v(ke);Se=m(Ge,"Next: Transactions"),Ge.forEach(d),Oe.forEach(d),Pe.forEach(d),je.forEach(d),this.h()},h(){document.title="UIDs - User Guide - Nymph",a.a=s,E(P,"font-size","3em"),U(j,"class","major"),U(qe,"href",k+"/user-guide/extending-the-entity-class"),U(qe,"class","button"),E(qe,"margin",".5em"),U(be,"class","col-6 col-12-small"),U(ke,"href",k+"/user-guide/transactions"),U(ke,"class","button"),E(ke,"margin",".5em"),U(Ce,"class","col-6 col-12-small"),E(Ce,"text-align","end"),U(ge,"class","row")},m(e,t){a.m(p,document.head),w(document.head,s),g(e,S,t),g(e,$,t),w($,j),w(j,P),w(P,L),w($,N),w($,O),w(O,G),w($,A),w($,R),w(R,V),w($,H),w($,Y),w(Y,z),w(z,B),w(B,F),w(z,X),w(Y,J),w(Y,K),w(K,M),w(M,Q),w(K,W),w(Y,Z),w(Y,_),w(_,ee),w(ee,ae),w(_,se),w(Y,te),w(Y,ne),w(ne,re),w(re,oe),w(ne,ie),w(Y,ue),w(Y,he),w(he,ce),w(ce,le),w(he,fe),w($,de),b(Ie,$,null),w($,De),w($,ve),w(ve,me),w($,ye),w($,Ee),w(Ee,Ue),g(e,pe,t),g(e,we,t),w(we,ge),w(ge,be),w(be,qe),w(qe,Te),w(ge,xe),w(ge,Ce),w(Ce,ke),w(ke,Se),$e=!0},p:q,i(e){$e||(T(Ie.$$.fragment,e),$e=!0)},o(e){x(Ie.$$.fragment,e),$e=!1},d(e){d(s),e&&a.d(),e&&d(S),e&&d($),C(Ie),e&&d(pe),e&&d(we)}}}class $ extends e{constructor(e){super(),a(this,e,null,S,s,{})}}export{$ as default};
