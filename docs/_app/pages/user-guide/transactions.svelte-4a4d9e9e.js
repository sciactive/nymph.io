import{S as a,i as t,s as n,k as s,e as r,t as o,L as e,d as i,n as c,c as h,a as l,g as m,X as u,b as d,f,F as p,G as y}from"../../chunks/vendor-836b274b.js";import{b as v}from"../../chunks/paths-6758d194.js";function E(a){let t,n,E,g,b,N,I,w,T,k,C,D,x,S,L,O,M,P,j,A,U,R,V,G,H,Q,W,Y,z,F,X,q,B,J,K,Z,$,_,aa,ta,na,sa,ra,oa,ea,ia,ca,ha,la,ma,ua,da,fa;return{c(){t=s(),n=r("section"),E=r("header"),g=r("h1"),b=o("Transactions"),N=s(),I=r("p"),w=o("In Node.js, Nymph supports nested transactions. Nothing will be written to\n    the database's permanent storage until the highest level transaction is\n    committed. When you start a transaction, you give it a name, then you can\n    commit or roll back that transaction, by name. This means if you're doing\n    transactions recursively, you should use a counter in your name. Nymph uses\n    internal transactions that start with the \"nymph-\" prefix. You should be\n    sure to commit or rollback transactions in the reverse order that they were\n    started, or you might run into trouble."),T=s(),k=r("p"),C=r("code"),D=o("Nymph"),x=o(" has the following methods for managing transactions."),S=s(),L=r("ul"),O=r("li"),M=r("code"),P=o("startTransaction"),j=o(" - Start a named transaction."),A=s(),U=r("li"),R=r("code"),V=o("commit"),G=o(" - Commit a named transaction."),H=s(),Q=r("li"),W=r("code"),Y=o("rollback"),z=o(" - Rollback a named transaction."),F=s(),X=r("li"),q=r("code"),B=o("inTransaction"),J=o(" - Check if Nymph is currently running within a transaction."),K=s(),Z=r("p"),$=o("Not all databases that Nymph supports (namely, MySQL using the MyISAM\n    engine) can use transactions, so the "),_=r("code"),aa=o("startTransaction"),ta=o(" method will\n    return false if transactions aren't supported."),na=s(),sa=r("p"),ra=o("To ensure data consistency, it's highly recommended to use a configuration\n    that supports transactions."),oa=s(),ea=r("section"),ia=r("div"),ca=r("div"),ha=r("a"),la=o("Previous: UIDs"),ma=s(),ua=r("div"),da=r("a"),fa=o("Next: Exp. and Imp. Entities"),this.h()},l(a){e('[data-svelte="svelte-1wtn147"]',document.head).forEach(i),t=c(a),n=h(a,"SECTION",{});var s=l(n);E=h(s,"HEADER",{class:!0});var r=l(E);g=h(r,"H1",{style:!0});var o=l(g);b=m(o,"Transactions"),o.forEach(i),r.forEach(i),N=c(s),I=h(s,"P",{});var u=l(I);w=m(u,"In Node.js, Nymph supports nested transactions. Nothing will be written to\n    the database's permanent storage until the highest level transaction is\n    committed. When you start a transaction, you give it a name, then you can\n    commit or roll back that transaction, by name. This means if you're doing\n    transactions recursively, you should use a counter in your name. Nymph uses\n    internal transactions that start with the \"nymph-\" prefix. You should be\n    sure to commit or rollback transactions in the reverse order that they were\n    started, or you might run into trouble."),u.forEach(i),T=c(s),k=h(s,"P",{});var d=l(k);C=h(d,"CODE",{});var f=l(C);D=m(f,"Nymph"),f.forEach(i),x=m(d," has the following methods for managing transactions."),d.forEach(i),S=c(s),L=h(s,"UL",{});var p=l(L);O=h(p,"LI",{});var y=l(O);M=h(y,"CODE",{});var v=l(M);P=m(v,"startTransaction"),v.forEach(i),j=m(y," - Start a named transaction."),y.forEach(i),A=c(p),U=h(p,"LI",{});var pa=l(U);R=h(pa,"CODE",{});var ya=l(R);V=m(ya,"commit"),ya.forEach(i),G=m(pa," - Commit a named transaction."),pa.forEach(i),H=c(p),Q=h(p,"LI",{});var va=l(Q);W=h(va,"CODE",{});var Ea=l(W);Y=m(Ea,"rollback"),Ea.forEach(i),z=m(va," - Rollback a named transaction."),va.forEach(i),F=c(p),X=h(p,"LI",{});var ga=l(X);q=h(ga,"CODE",{});var ba=l(q);B=m(ba,"inTransaction"),ba.forEach(i),J=m(ga," - Check if Nymph is currently running within a transaction."),ga.forEach(i),p.forEach(i),K=c(s),Z=h(s,"P",{});var Na=l(Z);$=m(Na,"Not all databases that Nymph supports (namely, MySQL using the MyISAM\n    engine) can use transactions, so the "),_=h(Na,"CODE",{});var Ia=l(_);aa=m(Ia,"startTransaction"),Ia.forEach(i),ta=m(Na," method will\n    return false if transactions aren't supported."),Na.forEach(i),na=c(s),sa=h(s,"P",{});var wa=l(sa);ra=m(wa,"To ensure data consistency, it's highly recommended to use a configuration\n    that supports transactions."),wa.forEach(i),s.forEach(i),oa=c(a),ea=h(a,"SECTION",{});var Ta=l(ea);ia=h(Ta,"DIV",{class:!0});var ka=l(ia);ca=h(ka,"DIV",{class:!0});var Ca=l(ca);ha=h(Ca,"A",{href:!0,class:!0,style:!0});var Da=l(ha);la=m(Da,"Previous: UIDs"),Da.forEach(i),Ca.forEach(i),ma=c(ka),ua=h(ka,"DIV",{class:!0,style:!0});var xa=l(ua);da=h(xa,"A",{href:!0,class:!0,style:!0});var Sa=l(da);fa=m(Sa,"Next: Exp. and Imp. Entities"),Sa.forEach(i),xa.forEach(i),ka.forEach(i),Ta.forEach(i),this.h()},h(){document.title="Transactions - User Guide - Nymph",u(g,"font-size","3em"),d(E,"class","major"),d(ha,"href",v+"/user-guide/uids"),d(ha,"class","button"),u(ha,"margin",".5em"),d(ca,"class","col-6 col-12-small"),d(da,"href",v+"/user-guide/exporting-and-importing-entities"),d(da,"class","button"),u(da,"margin",".5em"),d(ua,"class","col-6 col-12-small"),u(ua,"text-align","end"),d(ia,"class","row")},m(a,s){f(a,t,s),f(a,n,s),p(n,E),p(E,g),p(g,b),p(n,N),p(n,I),p(I,w),p(n,T),p(n,k),p(k,C),p(C,D),p(k,x),p(n,S),p(n,L),p(L,O),p(O,M),p(M,P),p(O,j),p(L,A),p(L,U),p(U,R),p(R,V),p(U,G),p(L,H),p(L,Q),p(Q,W),p(W,Y),p(Q,z),p(L,F),p(L,X),p(X,q),p(q,B),p(X,J),p(n,K),p(n,Z),p(Z,$),p(Z,_),p(_,aa),p(Z,ta),p(n,na),p(n,sa),p(sa,ra),f(a,oa,s),f(a,ea,s),p(ea,ia),p(ia,ca),p(ca,ha),p(ha,la),p(ia,ma),p(ia,ua),p(ua,da),p(da,fa)},p:y,i:y,o:y,d(a){a&&i(t),a&&i(n),a&&i(oa),a&&i(ea)}}}class g extends a{constructor(a){super(),t(this,a,null,E,n,{})}}export{g as default};
