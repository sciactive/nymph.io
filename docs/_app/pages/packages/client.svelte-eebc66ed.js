import{S as e,i as n,s,a0 as a,a5 as t,a1 as o,a2 as r,l as i,k as h,e as u,t as l,j as c,L as d,a3 as p,d as m,n as b,c as y,a as f,g as v,m as T,X as w,b as E,a4 as g,F as N,f as $,o as S,G as j,x as C,u as k,v as P}from"../../chunks/vendor-836b274b.js";import{b as D}from"../../chunks/paths-6758d194.js";function H(e){let n,s,H,O,R,U,q,A,I,x,Y,G,M,W,z,F,L,X,B,J,K,Q,V,Z,_,ee,ne,se,ae,te,oe,re,ie,he,ue,le,ce,de,pe;return F=new a({props:{language:t,code:"npm install --save @nymphjs/client"}}),de=new a({props:{language:o,code:"import { Nymph, PubSub } from '@nymphjs/client';\nimport Todo from 'Todo';\n\nconst nymphOptions = {\n  restUrl: 'https://yournymphrestserver/path/to/your/endpoint',\n  pubsubUrl: 'wss://yournymphpubsubserver',\n};\nconst nymph = new Nymph(nymphOptions);\nconst pubsub = new PubSub(nymphOptions, nymph);\nnymph.setEntityClass(Todo.class, Todo);\n\n// Now you can use Nymph and PubSub.\nconst myTodo = new Todo();\nmyTodo.name = 'This is a new todo!';\nmyTodo.done = false;\nawait myTodo.$save();\n\nlet allMyTodos = await nymph.getEntities({ class: Todo });\n\nlet subscription = pubsub.subscribeWith(myTodo, () => {\n  // When this is called, the entity will already contain new data from the\n  // publish event. If the entity is deleted, the GUID will be set to null.\n  if (myTodo.guid != null) {\n    alert('Somebody touched my todo!');\n  } else {\n    alert('Somebody deleted my todo!');\n    subscription.unsubscribe();\n  }\n});\n\n// ...\n\n// Subscribing to a query.\nlet todos = [];\nlet userCount = 0;\nlet subscription = pubsub.subscribeEntities(\n  {\n    class: Todo.class,\n  },\n  {\n    type: '&',\n    '!tag': 'archived',\n  }\n)(\n  (update) => {\n    // The first time this is called, `update` will be an array of Todo\n    // entities. After that, `update` will be a publish event object.\n\n    // This takes an existing array of entities and either updates it to match\n    // another array, or performs actions from a publish event object to update\n    // it.\n    pubsub.updateArray(todos, update);\n\n    // `todos` is now up to date with the latest publishes from the server.\n  },\n  (err) => alert(err),\n  (count) => {\n    // If you provide this callback, the server will send updates of how many\n    // clients are subscribed to this query.\n    userCount = count;\n  }\n);\n\n// ...\n\n// Remember to clean up your subscriptions when you no longer need them.\nsubscription.unsubscribe();"}}),{c(){n=new r,s=i(),H=h(),O=u("section"),R=u("header"),U=u("h1"),q=l("Client"),A=h(),I=u("p"),x=l("The Nymph Client allows you to query and push data to a Nymph REST server\n    from the browser. You can also subscribe to entities and queries on a Nymph\n    PubSub server and be notified of changes."),Y=h(),G=u("header"),M=u("h2"),W=l("Installation"),z=h(),c(F.$$.fragment),L=h(),X=u("p"),B=l("This package is the Nymph client for browsers. You can find UMD in "),J=u("code"),K=l("dist"),Q=l(", or TS source in "),V=u("code"),Z=l("src"),_=l(". There is also a\n    "),ee=u("strong"),ne=u("a"),se=l("Node.js client"),ae=l("."),te=h(),oe=u("header"),re=u("h2"),ie=l("Usage"),he=h(),ue=u("p"),le=l("Here's an overview:"),ce=h(),c(de.$$.fragment),this.h()},l(e){const a=d('[data-svelte="svelte-1j0fx8b"]',document.head);n=p(a),s=i(),a.forEach(m),H=b(e),O=y(e,"SECTION",{});var t=f(O);R=y(t,"HEADER",{class:!0});var o=f(R);U=y(o,"H1",{style:!0});var r=f(U);q=v(r,"Client"),r.forEach(m),o.forEach(m),A=b(t),I=y(t,"P",{});var h=f(I);x=v(h,"The Nymph Client allows you to query and push data to a Nymph REST server\n    from the browser. You can also subscribe to entities and queries on a Nymph\n    PubSub server and be notified of changes."),h.forEach(m),Y=b(t),G=y(t,"HEADER",{class:!0});var u=f(G);M=y(u,"H2",{});var l=f(M);W=v(l,"Installation"),l.forEach(m),u.forEach(m),z=b(t),T(F.$$.fragment,t),L=b(t),X=y(t,"P",{});var c=f(X);B=v(c,"This package is the Nymph client for browsers. You can find UMD in "),J=y(c,"CODE",{});var w=f(J);K=v(w,"dist"),w.forEach(m),Q=v(c,", or TS source in "),V=y(c,"CODE",{});var E=f(V);Z=v(E,"src"),E.forEach(m),_=v(c,". There is also a\n    "),ee=y(c,"STRONG",{});var g=f(ee);ne=y(g,"A",{href:!0});var N=f(ne);se=v(N,"Node.js client"),N.forEach(m),g.forEach(m),ae=v(c,"."),c.forEach(m),te=b(t),oe=y(t,"HEADER",{class:!0});var $=f(oe);re=y($,"H2",{});var S=f(re);ie=v(S,"Usage"),S.forEach(m),$.forEach(m),he=b(t),ue=y(t,"P",{});var j=f(ue);le=v(j,"Here's an overview:"),j.forEach(m),ce=b(t),T(de.$$.fragment,t),t.forEach(m),this.h()},h(){document.title="Client - Packages - Nymph",n.a=s,w(U,"font-size","3em"),E(R,"class","major"),E(G,"class","major"),E(ne,"href",D+"/packages/client-node"),E(oe,"class","major")},m(e,a){n.m(g,document.head),N(document.head,s),$(e,H,a),$(e,O,a),N(O,R),N(R,U),N(U,q),N(O,A),N(O,I),N(I,x),N(O,Y),N(O,G),N(G,M),N(M,W),N(O,z),S(F,O,null),N(O,L),N(O,X),N(X,B),N(X,J),N(J,K),N(X,Q),N(X,V),N(V,Z),N(X,_),N(X,ee),N(ee,ne),N(ne,se),N(X,ae),N(O,te),N(O,oe),N(oe,re),N(re,ie),N(O,he),N(O,ue),N(ue,le),N(O,ce),S(de,O,null),pe=!0},p:j,i(e){pe||(C(F.$$.fragment,e),C(de.$$.fragment,e),pe=!0)},o(e){k(F.$$.fragment,e),k(de.$$.fragment,e),pe=!1},d(e){m(s),e&&n.d(),e&&m(H),e&&m(O),P(F),P(de)}}}class O extends e{constructor(e){super(),n(this,e,null,H,s,{})}}export{O as default};
