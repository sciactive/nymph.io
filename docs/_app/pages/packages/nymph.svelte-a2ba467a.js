import{S as a,i as e,s,a0 as t,a5 as n,a1 as o,a2 as r,l as i,k as d,e as h,t as c,j as l,L as m,a3 as y,d as u,n as p,c as f,a as g,g as v,m as E,X as $,b as T,a4 as N,F as b,f as w,o as D,G as j,x as H,u as S,v as q}from"../../chunks/vendor-836b274b.js";import{b as x}from"../../chunks/paths-6758d194.js";function k(a){let e,s,k,P,L,A,Q,_,C,I,M,R,B,G,O,U,Y,z,F,W,X,J,K,V,Z,aa,ea,sa,ta,na,oa,ra,ia,da,ha,ca,la,ma,ya,ua,pa;return U=new t({props:{language:n,code:"npm install --save @nymphjs/nymph"}}),ma=new t({props:{language:o,code:"// main.ts\nimport { Nymph } from '@nymphjs/nymph';\nimport MySQLDriver from '@nymphjs/driver-mysql';\nimport Todo from './Todo';\n\nconst mysqlConfig = {\n  host: 'your_db_host',\n  database: 'your_database',\n  user: 'your_user',\n  password: 'your_password',\n};\n\nNymph.init({}, new MySQLDriver(mysqlConfig));\n\n// You are set up. Now you can use entity classes like `Todo` to store data,\n// and Nymph's query methods like `getEntities` to retrieve them.\n\nasync function run() {\n  const myEntity = new Todo();\n  myEntity.text = 'Get it done!';\n  await myEntity.$save();\n\n  const otherPendingTodos = await Nymph.getEntities(\n    { class: Todo },\n    { type: '&', '!guid': myEntity.guid, equal: ['done', false] }\n  );\n\n  const total = otherPendingTodos.length;\n  const single = total === 1;\n  console.log(\n    `Besides the one I just created, there ${\n      single ? 'is' : 'are'\n    } ${total} pending todo${single ? '' : 's'} in the database.`\n  );\n}"}}),ua=new t({props:{language:o,code:"// Todo.ts\nimport { Nymph, Entity } from '@nymphjs/nymph';\n\nexport type TodoData = {\n  text: string;\n  done: boolean;\n};\n\nexport default class Todo extends Entity<TodoData> {\n  static ETYPE = 'todo'; // This is used for the table name(s) in the DB.\n  static class = 'Todo'; // This is used to map references to their class.\n\n  static async factory(guid?: string): Promise<Todo & TodoData> {\n    return (await super.factory(guid)) as Todo & TodoData;\n  }\n\n  static factorySync(guid?: string): Todo & TodoData {\n    return super.factorySync(guid) as Todo & TodoData;\n  }\n\n  constructor(guid?: string) {\n    super(guid);\n\n    if (this.guid == null) {\n      // Within the methods of an entity, you will use `this.$data` to access\n      // its data. Outside, you don't need the $data part.\n      this.$data.text = '';\n      this.$data.done = false;\n    }\n  }\n}\n\nNymph.setEntityClass(Todo.class, Todo);"}}),{c(){e=new r,s=i(),k=d(),P=h("section"),L=h("header"),A=h("h1"),Q=c("Nymph"),_=d(),C=h("p"),I=c("The Nymph core provides the base level classes and utilities to query the\n    database, save data to it, and define different data types."),M=d(),R=h("header"),B=h("h2"),G=c("Installation"),O=d(),l(U.$$.fragment),Y=d(),z=h("header"),F=h("h2"),W=c("Drivers"),X=d(),J=h("p"),K=c("To use Nymph, you need a database driver. Nymph provides a "),V=h("a"),Z=c("MySQL driver"),aa=c("\n    and a "),ea=h("a"),sa=c("SQLite3 driver"),ta=c("."),na=d(),oa=h("header"),ra=h("h2"),ia=c("Usage"),da=d(),ha=h("p"),ca=c("Here's an overview:"),la=d(),l(ma.$$.fragment),ya=d(),l(ua.$$.fragment),this.h()},l(a){const t=m('[data-svelte="svelte-174dfis"]',document.head);e=y(t),s=i(),t.forEach(u),k=p(a),P=f(a,"SECTION",{});var n=g(P);L=f(n,"HEADER",{class:!0});var o=g(L);A=f(o,"H1",{style:!0});var r=g(A);Q=v(r,"Nymph"),r.forEach(u),o.forEach(u),_=p(n),C=f(n,"P",{});var d=g(C);I=v(d,"The Nymph core provides the base level classes and utilities to query the\n    database, save data to it, and define different data types."),d.forEach(u),M=p(n),R=f(n,"HEADER",{class:!0});var h=g(R);B=f(h,"H2",{});var c=g(B);G=v(c,"Installation"),c.forEach(u),h.forEach(u),O=p(n),E(U.$$.fragment,n),Y=p(n),z=f(n,"HEADER",{class:!0});var l=g(z);F=f(l,"H2",{});var $=g(F);W=v($,"Drivers"),$.forEach(u),l.forEach(u),X=p(n),J=f(n,"P",{});var T=g(J);K=v(T,"To use Nymph, you need a database driver. Nymph provides a "),V=f(T,"A",{href:!0});var N=g(V);Z=v(N,"MySQL driver"),N.forEach(u),aa=v(T,"\n    and a "),ea=f(T,"A",{href:!0});var b=g(ea);sa=v(b,"SQLite3 driver"),b.forEach(u),ta=v(T,"."),T.forEach(u),na=p(n),oa=f(n,"HEADER",{class:!0});var w=g(oa);ra=f(w,"H2",{});var D=g(ra);ia=v(D,"Usage"),D.forEach(u),w.forEach(u),da=p(n),ha=f(n,"P",{});var j=g(ha);ca=v(j,"Here's an overview:"),j.forEach(u),la=p(n),E(ma.$$.fragment,n),ya=p(n),E(ua.$$.fragment,n),n.forEach(u),this.h()},h(){document.title="Nymph - Packages - Nymph",e.a=s,$(A,"font-size","3em"),T(L,"class","major"),T(R,"class","major"),T(z,"class","major"),T(V,"href",x+"/packages/driver-mysql"),T(ea,"href",x+"/packages/driver-sqlite3"),T(oa,"class","major")},m(a,t){e.m(N,document.head),b(document.head,s),w(a,k,t),w(a,P,t),b(P,L),b(L,A),b(A,Q),b(P,_),b(P,C),b(C,I),b(P,M),b(P,R),b(R,B),b(B,G),b(P,O),D(U,P,null),b(P,Y),b(P,z),b(z,F),b(F,W),b(P,X),b(P,J),b(J,K),b(J,V),b(V,Z),b(J,aa),b(J,ea),b(ea,sa),b(J,ta),b(P,na),b(P,oa),b(oa,ra),b(ra,ia),b(P,da),b(P,ha),b(ha,ca),b(P,la),D(ma,P,null),b(P,ya),D(ua,P,null),pa=!0},p:j,i(a){pa||(H(U.$$.fragment,a),H(ma.$$.fragment,a),H(ua.$$.fragment,a),pa=!0)},o(a){S(U.$$.fragment,a),S(ma.$$.fragment,a),S(ua.$$.fragment,a),pa=!1},d(a){u(s),a&&e.d(),a&&u(k),a&&u(P),q(U),q(ma),q(ua)}}}class P extends a{constructor(a){super(),e(this,a,null,k,s,{})}}export{P as default};
