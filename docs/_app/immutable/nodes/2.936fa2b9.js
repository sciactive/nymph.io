import{S as ka,i as Aa,s as ja,a as l,k as a,q as o,y as Ye,F as La,h as t,c,l as r,m as n,r as i,z as Fe,n as h,b as y,C as e,A as Me,D as Ra,g as Ve,d as Je,B as ze}from"../chunks/index.d7cc8d8b.js";import{I as Be,e as Ha,f as Qa,g as Ta,h as qa}from"../chunks/Icon.b8c1070a.js";function Da($a){let M,k,p,A,Z,Ge,Ue,ee,We,Ke,te,Xe,Ze,ae,et,tt,V,re,v,at,_e,m,J,ne,rt,nt,se,st,ot,d,j,z,L,it,E,oe,lt,ct,ie,ht,pt,R,B,H,dt,b,le,ut,ft,ce,mt,yt,Q,G,T,vt,g,he,Et,bt,q,gt,pe,_t,Nt,wt,D,U,x,St,_,de,It,Pt,ue,$t,Ne,u,N,fe,kt,At,me,jt,Lt,ye,Rt,Ht,ve,Qt,Tt,Ee,qt,we,w,W,be,Dt,xt,C,Ct,O,Ot,Yt,Se,S,K,ge,Ft,Mt,Y,Vt,F,Jt,zt,Ie;return L=new Be({props:{path:Ha}}),H=new Be({props:{path:Qa}}),T=new Be({props:{path:Ta}}),x=new Be({props:{path:qa}}),{c(){M=l(),k=a("section"),p=a("div"),A=a("header"),Z=a("h1"),Ge=o("Nymph.js"),Ue=l(),ee=a("p"),We=o("JavaScript data objects for Node.js and the browser."),Ke=l(),te=a("p"),Xe=o(`Nymph is an object relational mapper for collaborative web apps. Nymph
      runs in Node.js and provides a REST server with clients built for Node.js
      and the browser. It allows rapid prototyping and production ready speed
      and features.`),Ze=l(),ae=a("p"),et=o(`Nymph can use SQLite3, MySQL, or PostgreSQL as its database backend. You
      can use SQLite in development, and MySQL or Postgres in production. You
      can even use Nymph with SQLite in an Electron app.`),tt=l(),V=a("ul"),re=a("li"),v=a("a"),at=o("Nymph.js on GitHub"),_e=l(),m=a("section"),J=a("header"),ne=a("h2"),rt=o("Features"),nt=l(),se=a("p"),st=o(`Imagine writing a SQL query on the frontend and saying, "update this array
    whenever the results for this query change." Now imagine instead of SQL,
    your query is a simple JSON structure and has automatic access control built
    right in. Imagine having all your logic on the frontend, or the backend if
    you prefer, because you work with the data all the same. That's Nymph.`),ot=l(),d=a("div"),j=a("article"),z=a("span"),Ye(L.$$.fragment),it=l(),E=a("div"),oe=a("h3"),lt=o("Speedy"),ct=l(),ie=a("p"),ht=o(`Nymph is lean and fast. Not just in processing, but Nymph can be used
          for rapid prototyping.`),pt=l(),R=a("article"),B=a("span"),Ye(H.$$.fragment),dt=l(),b=a("div"),le=a("h3"),ut=o("Open Source"),ft=l(),ce=a("p"),mt=o(`Nymph is licensed under the Apache-2 license. It provides all you need
          to build a backend for your app and the frontend tools you'll need as
          well.`),yt=l(),Q=a("article"),G=a("span"),Ye(T.$$.fragment),vt=l(),g=a("div"),he=a("h3"),Et=o("Reactive"),bt=l(),q=a("p"),gt=o("Nymph's publish/subscribe server makes it easy to build "),pe=a("strong"),_t=o("collaborative"),Nt=o(` apps. You can subscribe to complex queries from the client and be notified
          when the queries' results have changed.`),wt=l(),D=a("article"),U=a("span"),Ye(x.$$.fragment),St=l(),_=a("div"),de=a("h3"),It=o("Secure"),Pt=l(),ue=a("p"),$t=o(`Nymph provides an optional user and group manager called Tilmeld that
          secures your app based on granular permission controls.`),Ne=l(),u=a("section"),N=a("header"),fe=a("h2"),kt=o("Framework Agnostic"),At=l(),me=a("p"),jt=o(`Nymph is very easy to integrate into React, Svelte, Angular, Ember, and
      more.`),Lt=l(),ye=a("p"),Rt=o(`Nymph's easy querying on the server and client makes it perfect for building
    complex apps with any frontend framework. Because you don't have to write
    SQL, almost all of your logic can be on the client side, if you prefer. You
    can also use backend logic in the client as if it were written on the
    front-end with automatic asynchronous server calls.`),Ht=l(),ve=a("p"),Qt=o(`Nymph's REST server package makes it easy to integrate anywhere in your app.
    It provides an Express middleware that you can place on any arbitrary
    endpoint.`),Tt=l(),Ee=a("p"),qt=o(`Nymph's PubSub server package makes synchronizing your client with pushed
    changes from the server super easy. With a reactive framework on the
    frontend, your UI will update in near real time to changes to any entities
    that match your subscribed queries.`),we=l(),w=a("section"),W=a("header"),be=a("h2"),Dt=o("Full API Docs"),xt=l(),C=a("p"),Ct=o("If you want to really dive deep into Nymph, you can also browse the "),O=a("a"),Ot=o("API docs"),Yt=o(", which covers every part of Nymph's API."),Se=l(),S=a("section"),K=a("header"),ge=a("h2"),Ft=o("Migration"),Mt=l(),Y=a("p"),Vt=o("In 2021, Nymph was migrated from PHP to Node.js. You can also visit "),F=a("a"),Jt=o("the site for the legacy version"),zt=o("."),this.h()},l(s){La("svelte-o16nng",document.head).forEach(t),M=c(s),k=r(s,"SECTION",{id:!0});var Bt=n(k);p=r(Bt,"DIV",{class:!0});var I=n(p);A=r(I,"HEADER",{});var Pe=n(A);Z=r(Pe,"H1",{});var Gt=n(Z);Ge=i(Gt,"Nymph.js"),Gt.forEach(t),Ue=c(Pe),ee=r(Pe,"P",{});var Ut=n(ee);We=i(Ut,"JavaScript data objects for Node.js and the browser."),Ut.forEach(t),Pe.forEach(t),Ke=c(I),te=r(I,"P",{});var Wt=n(te);Xe=i(Wt,`Nymph is an object relational mapper for collaborative web apps. Nymph
      runs in Node.js and provides a REST server with clients built for Node.js
      and the browser. It allows rapid prototyping and production ready speed
      and features.`),Wt.forEach(t),Ze=c(I),ae=r(I,"P",{});var Kt=n(ae);et=i(Kt,`Nymph can use SQLite3, MySQL, or PostgreSQL as its database backend. You
      can use SQLite in development, and MySQL or Postgres in production. You
      can even use Nymph with SQLite in an Electron app.`),Kt.forEach(t),tt=c(I),V=r(I,"UL",{class:!0});var Xt=n(V);re=r(Xt,"LI",{});var Zt=n(re);v=r(Zt,"A",{href:!0,target:!0,rel:!0,class:!0});var ea=n(v);at=i(ea,"Nymph.js on GitHub"),ea.forEach(t),Zt.forEach(t),Xt.forEach(t),I.forEach(t),Bt.forEach(t),_e=c(s),m=r(s,"SECTION",{});var X=n(m);J=r(X,"HEADER",{class:!0});var ta=n(J);ne=r(ta,"H2",{});var aa=n(ne);rt=i(aa,"Features"),aa.forEach(t),ta.forEach(t),nt=c(X),se=r(X,"P",{});var ra=n(se);st=i(ra,`Imagine writing a SQL query on the frontend and saying, "update this array
    whenever the results for this query change." Now imagine instead of SQL,
    your query is a simple JSON structure and has automatic access control built
    right in. Imagine having all your logic on the frontend, or the backend if
    you prefer, because you work with the data all the same. That's Nymph.`),ra.forEach(t),ot=c(X),d=r(X,"DIV",{class:!0});var P=n(d);j=r(P,"ARTICLE",{});var $e=n(j);z=r($e,"SPAN",{class:!0});var na=n(z);Fe(L.$$.fragment,na),na.forEach(t),it=c($e),E=r($e,"DIV",{class:!0});var ke=n(E);oe=r(ke,"H3",{});var sa=n(oe);lt=i(sa,"Speedy"),sa.forEach(t),ct=c(ke),ie=r(ke,"P",{});var oa=n(ie);ht=i(oa,`Nymph is lean and fast. Not just in processing, but Nymph can be used
          for rapid prototyping.`),oa.forEach(t),ke.forEach(t),$e.forEach(t),pt=c(P),R=r(P,"ARTICLE",{});var Ae=n(R);B=r(Ae,"SPAN",{class:!0});var ia=n(B);Fe(H.$$.fragment,ia),ia.forEach(t),dt=c(Ae),b=r(Ae,"DIV",{class:!0});var je=n(b);le=r(je,"H3",{});var la=n(le);ut=i(la,"Open Source"),la.forEach(t),ft=c(je),ce=r(je,"P",{});var ca=n(ce);mt=i(ca,`Nymph is licensed under the Apache-2 license. It provides all you need
          to build a backend for your app and the frontend tools you'll need as
          well.`),ca.forEach(t),je.forEach(t),Ae.forEach(t),yt=c(P),Q=r(P,"ARTICLE",{});var Le=n(Q);G=r(Le,"SPAN",{class:!0});var ha=n(G);Fe(T.$$.fragment,ha),ha.forEach(t),vt=c(Le),g=r(Le,"DIV",{class:!0});var Re=n(g);he=r(Re,"H3",{});var pa=n(he);Et=i(pa,"Reactive"),pa.forEach(t),bt=c(Re),q=r(Re,"P",{});var He=n(q);gt=i(He,"Nymph's publish/subscribe server makes it easy to build "),pe=r(He,"STRONG",{});var da=n(pe);_t=i(da,"collaborative"),da.forEach(t),Nt=i(He,` apps. You can subscribe to complex queries from the client and be notified
          when the queries' results have changed.`),He.forEach(t),Re.forEach(t),Le.forEach(t),wt=c(P),D=r(P,"ARTICLE",{});var Qe=n(D);U=r(Qe,"SPAN",{class:!0});var ua=n(U);Fe(x.$$.fragment,ua),ua.forEach(t),St=c(Qe),_=r(Qe,"DIV",{class:!0});var Te=n(_);de=r(Te,"H3",{});var fa=n(de);It=i(fa,"Secure"),fa.forEach(t),Pt=c(Te),ue=r(Te,"P",{});var ma=n(ue);$t=i(ma,`Nymph provides an optional user and group manager called Tilmeld that
          secures your app based on granular permission controls.`),ma.forEach(t),Te.forEach(t),Qe.forEach(t),P.forEach(t),X.forEach(t),Ne=c(s),u=r(s,"SECTION",{});var $=n(u);N=r($,"HEADER",{class:!0});var qe=n(N);fe=r(qe,"H2",{});var ya=n(fe);kt=i(ya,"Framework Agnostic"),ya.forEach(t),At=c(qe),me=r(qe,"P",{});var va=n(me);jt=i(va,`Nymph is very easy to integrate into React, Svelte, Angular, Ember, and
      more.`),va.forEach(t),qe.forEach(t),Lt=c($),ye=r($,"P",{});var Ea=n(ye);Rt=i(Ea,`Nymph's easy querying on the server and client makes it perfect for building
    complex apps with any frontend framework. Because you don't have to write
    SQL, almost all of your logic can be on the client side, if you prefer. You
    can also use backend logic in the client as if it were written on the
    front-end with automatic asynchronous server calls.`),Ea.forEach(t),Ht=c($),ve=r($,"P",{});var ba=n(ve);Qt=i(ba,`Nymph's REST server package makes it easy to integrate anywhere in your app.
    It provides an Express middleware that you can place on any arbitrary
    endpoint.`),ba.forEach(t),Tt=c($),Ee=r($,"P",{});var ga=n(Ee);qt=i(ga,`Nymph's PubSub server package makes synchronizing your client with pushed
    changes from the server super easy. With a reactive framework on the
    frontend, your UI will update in near real time to changes to any entities
    that match your subscribed queries.`),ga.forEach(t),$.forEach(t),we=c(s),w=r(s,"SECTION",{});var De=n(w);W=r(De,"HEADER",{class:!0});var _a=n(W);be=r(_a,"H2",{});var Na=n(be);Dt=i(Na,"Full API Docs"),Na.forEach(t),_a.forEach(t),xt=c(De),C=r(De,"P",{});var xe=n(C);Ct=i(xe,"If you want to really dive deep into Nymph, you can also browse the "),O=r(xe,"A",{href:!0,rel:!0});var wa=n(O);Ot=i(wa,"API docs"),wa.forEach(t),Yt=i(xe,", which covers every part of Nymph's API."),xe.forEach(t),De.forEach(t),Se=c(s),S=r(s,"SECTION",{});var Ce=n(S);K=r(Ce,"HEADER",{class:!0});var Sa=n(K);ge=r(Sa,"H2",{});var Ia=n(ge);Ft=i(Ia,"Migration"),Ia.forEach(t),Sa.forEach(t),Mt=c(Ce),Y=r(Ce,"P",{});var Oe=n(Y);Vt=i(Oe,"In 2021, Nymph was migrated from PHP to Node.js. You can also visit "),F=r(Oe,"A",{href:!0,rel:!0});var Pa=n(F);Jt=i(Pa,"the site for the legacy version"),Pa.forEach(t),zt=i(Oe,"."),Oe.forEach(t),Ce.forEach(t),this.h()},h(){document.title="Nymph.js - JavaScript Data Objects",h(v,"href","https://github.com/sciactive/nymphjs"),h(v,"target","_blank"),h(v,"rel","noreferrer"),h(v,"class","button big"),h(V,"class","actions"),h(p,"class","content"),h(k,"id","banner"),h(J,"class","major"),h(z,"class","icon"),h(E,"class","content"),h(B,"class","icon"),h(b,"class","content"),h(G,"class","icon"),h(g,"class","content"),h(U,"class","icon"),h(_,"class","content"),h(d,"class","features"),h(N,"class","major"),h(W,"class","major"),h(O,"href","/api/latest/"),h(O,"rel","external"),h(K,"class","major"),h(F,"href","/legacy/"),h(F,"rel","external")},m(s,f){y(s,M,f),y(s,k,f),e(k,p),e(p,A),e(A,Z),e(Z,Ge),e(A,Ue),e(A,ee),e(ee,We),e(p,Ke),e(p,te),e(te,Xe),e(p,Ze),e(p,ae),e(ae,et),e(p,tt),e(p,V),e(V,re),e(re,v),e(v,at),y(s,_e,f),y(s,m,f),e(m,J),e(J,ne),e(ne,rt),e(m,nt),e(m,se),e(se,st),e(m,ot),e(m,d),e(d,j),e(j,z),Me(L,z,null),e(j,it),e(j,E),e(E,oe),e(oe,lt),e(E,ct),e(E,ie),e(ie,ht),e(d,pt),e(d,R),e(R,B),Me(H,B,null),e(R,dt),e(R,b),e(b,le),e(le,ut),e(b,ft),e(b,ce),e(ce,mt),e(d,yt),e(d,Q),e(Q,G),Me(T,G,null),e(Q,vt),e(Q,g),e(g,he),e(he,Et),e(g,bt),e(g,q),e(q,gt),e(q,pe),e(pe,_t),e(q,Nt),e(d,wt),e(d,D),e(D,U),Me(x,U,null),e(D,St),e(D,_),e(_,de),e(de,It),e(_,Pt),e(_,ue),e(ue,$t),y(s,Ne,f),y(s,u,f),e(u,N),e(N,fe),e(fe,kt),e(N,At),e(N,me),e(me,jt),e(u,Lt),e(u,ye),e(ye,Rt),e(u,Ht),e(u,ve),e(ve,Qt),e(u,Tt),e(u,Ee),e(Ee,qt),y(s,we,f),y(s,w,f),e(w,W),e(W,be),e(be,Dt),e(w,xt),e(w,C),e(C,Ct),e(C,O),e(O,Ot),e(C,Yt),y(s,Se,f),y(s,S,f),e(S,K),e(K,ge),e(ge,Ft),e(S,Mt),e(S,Y),e(Y,Vt),e(Y,F),e(F,Jt),e(Y,zt),Ie=!0},p:Ra,i(s){Ie||(Ve(L.$$.fragment,s),Ve(H.$$.fragment,s),Ve(T.$$.fragment,s),Ve(x.$$.fragment,s),Ie=!0)},o(s){Je(L.$$.fragment,s),Je(H.$$.fragment,s),Je(T.$$.fragment,s),Je(x.$$.fragment,s),Ie=!1},d(s){s&&t(M),s&&t(k),s&&t(_e),s&&t(m),ze(L),ze(H),ze(T),ze(x),s&&t(Ne),s&&t(u),s&&t(we),s&&t(w),s&&t(Se),s&&t(S)}}}class Oa extends ka{constructor(M){super(),Aa(this,M,null,Da,ja,{})}}export{Oa as component};
